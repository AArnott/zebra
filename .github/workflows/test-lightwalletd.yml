name: Test lightwalletd

on:
  workflow_dispatch:
    inputs:
      network:
        default: 'Mainnet'
        description: 'Network to deploy: Mainnet or Testnet'
        required: true
      regenerate-disks:
        type: boolean
        default: false
        description: 'Just update stateful disks'
        required: true
  pull_request:
    branches:
      - main
    paths:
      # code and tests
      - '**/*.rs'
      # hard-coded checkpoints and proptest regressions
      - '**/*.txt'
      # test data snapshots
      - '**/*.snap'
      # dependencies
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      # workflow definitions
      - 'docker/**'
      - '.github/workflows/test-lightwalletd.yml'

  push:
    branches:
      - main
    paths:
      # code and tests
      - '**/*.rs'
      # hard-coded checkpoints and proptest regressions
      - '**/*.txt'
      # test data snapshots
      - '**/*.snap'
      # dependencies
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      # workflow definitions
      - 'docker/**'
      - '.github/workflows/test-lightwalletd.yml'

env:
  CARGO_INCREMENTAL: '1'
  ZEBRA_SKIP_IPV6_TESTS: '1'
  RUST_BACKTRACE: full
  RUST_LIB_BACKTRACE: full
  COLORBT_SHOW_HIDDEN: '1'
  NETWORK: Mainnet
  PROJECT_ID: zealous-zebra
  GAR_BASE: us-docker.pkg.dev/zealous-zebra/zebra
  GCR_BASE: gcr.io/zealous-zebra
  REGION: us-central1
  ZONE: us-central1-a
  MACHINE_TYPE: c2d-standard-4
  IMAGE_NAME: lightwalletd-test

jobs:
  build:
    name: Build images
    timeout-minutes: 210
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          persist-credentials: false

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
        with:
          short-length: 7

        # Automatic tag management and OCI Image Format Specification for labels
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}
            ${{ env.GCR_BASE }}/${{ env.GITHUB_REPOSITORY_SLUG_URL }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      # Setup Docker Buildx to allow use of docker cache layers from GH
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.7.1
        with:
          workload_identity_provider: 'projects/143793276228/locations/global/workloadIdentityPools/github-actions/providers/github-oidc'
          service_account: 'github-service-account@zealous-zebra.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Login to Google Container Registry
        uses: docker/login-action@v1.14.1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      # Build and push image to Google Artifact Registry
      - name: Build & push
        id: docker_build
        uses: docker/build-push-action@v2.10.0
        with:
          target: tester
          context: .
          file: ./docker/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NETWORK=${{ github.event.inputs.network || env.NETWORK }}
            SHORT_SHA=${{ env.GITHUB_SHA_SHORT }}
            RUST_BACKTRACE=${{ env.RUST_BACKTRACE }}
            RUST_LIB_BACKTRACE=${{ env.RUST_LIB_BACKTRACE }}
            COLORBT_SHOW_HIDDEN=${{ env.COLORBT_SHOW_HIDDEN }}
            ZEBRA_SKIP_NETWORK_TESTS="1"
            RUST_LOG=info
            SENTRY_DSN=${{ secrets.SENTRY_ENDPOINT }}
          push: true
          cache-from: type=registry,ref=${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:${{ env.GITHUB_REF_SLUG_URL }}-buildcache
          cache-to: type=registry,ref=${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:${{ env.GITHUB_REF_SLUG_URL }}-buildcache,mode=max


  # TODO: add description to this test
  lightwalletd-full-sync:
    name: Test lightwalletd full sync
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.regenerate-disks != 'true' }}
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
        with:
          short-length: 7

      - name: Run tests with lightwalletd full sync
        run: |
          docker pull ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:sha-${{ env.GITHUB_SHA_SHORT }}
          docker run --name lightwalletd-tests -t ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:sha-${{ env.GITHUB_SHA_SHORT }} cargo test -- --ignored --nocapture  lightwalletd_full_sync
        env:
          ZEBRA_CACHED_STATE_PATH: '$HOME/.cache/zebra'
          LIGHTWALLETD_DATA_DIR: '$HOME/.cache/lightwalletd'

  # TODO: add description to this test
  lightwalletd-update-sync:
    name: Test lightwalletd update
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.regenerate-disks != 'true' }}
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
        with:
          short-length: 7

      - name: Run tests with lightwalletd update sync
        run: |
          docker pull ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:sha-${{ env.GITHUB_SHA_SHORT }}
          docker run --name lightwalletd-tests -t ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:sha-${{ env.GITHUB_SHA_SHORT }} cargo test -- --ignored --nocapture  lightwalletd_update_sync
        env:
          ZEBRA_CACHED_STATE_PATH: '$HOME/.cache/zebra'
          LIGHTWALLETD_DATA_DIR: '$HOME/.cache/lightwalletd'

  # TODO: add description to this test
  lightwalletd-test-suite:
    name: Test lightwalletd suite
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.regenerate-disks != 'true' }}
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
        with:
          short-length: 7

      - name: Run tests with lightwalletd suite
        run: |
          docker pull ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:sha-${{ env.GITHUB_SHA_SHORT }}
          docker run --name lightwalletd-tests -t ${{ env.GAR_BASE }}/${{ env.IMAGE_NAME }}:sha-${{ env.GITHUB_SHA_SHORT }} cargo test -- --ignored --nocapture  lightwalletd_test_suite
        env:
          ZEBRA_CACHED_STATE_PATH: '$HOME/.cache/zebra'
